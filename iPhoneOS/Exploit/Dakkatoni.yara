rule Exploit_iPhoneOS_Dakkatoni_A_2147743986_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:iPhoneOS/Dakkatoni.A"
        threat_id = "2147743986"
        type = "Exploit"
        platform = "iPhoneOS: "
        family = "Dakkatoni"
        severity = "Critical"
        signature_type = "SIGNATURE_TYPE_MACHOHSTR_EXT"
        threshold = "15"
        strings_accuracy = "Low"
    strings:
        $x_15_1 = {e8 17 40 f9 a9 83 5c f8 1f 01 09 eb ?? ?? ?? 54 e1 03 00 32 08 00 80 52 a0 03 5c f8 a9 03 5d f8 e2 03 09 aa e3 03 08 aa e4 03 08 aa e5 03 08 aa e6 03 08 aa ?? ?? ?? 94}  //weight: 15, accuracy: Low
        $x_1_2 = "Invalid input - no kernel data" ascii //weight: 1
        $x_1_3 = "Invalid input - not Kernel (0x%02x)" ascii //weight: 1
        $x_1_4 = "This option makes the kernel allow processes to run with invalid executable pages." ascii //weight: 1
        $x_1_5 = "Unable to exploit kernel. This is not an error. Reboot and try again." ascii //weight: 1
        $x_1_6 = "V_exportKernelTaskPortSwitch" ascii //weight: 1
        $x_1_7 = "V_kernelExploitPickerView" ascii //weight: 1
        $x_1_8 = "V_kernelExploitTextField" ascii //weight: 1
        $x_1_9 = "[*] Kernel Page Size: 0x%lx" ascii //weight: 1
        $x_1_10 = "[*] Kernel Version: %s" ascii //weight: 1
        $x_1_11 = "[*] Successfully exploited kernel." ascii //weight: 1
        $x_1_12 = "[*] attempt to read kernel memory but no kernel memory read primitives available" ascii //weight: 1
        $x_1_13 = "[*] attempt to write to kernel memory before any kernel memory write primitives available" ascii //weight: 1
        $x_1_14 = "[*] couldn't leak any kernel pointers" ascii //weight: 1
        $x_1_15 = "[*] fakeport: 0x%llx" ascii //weight: 1
        $x_1_16 = "[*] mach_port_allocate: %x %s" ascii //weight: 1
        $x_1_17 = "[*] mach_port_insert_right failed: %x %s" ascii //weight: 1
        $x_1_18 = "[*] port: %x" ascii //weight: 1
        $x_1_19 = "created %zu ports" ascii //weight: 1
        $x_1_20 = "exploitMessageLabel" ascii //weight: 1
        $x_1_21 = "exploitPickerDoneAction" ascii //weight: 1
        $x_1_22 = "exploitPickerToolbar" ascii //weight: 1
        $x_1_23 = "exploitProgressLabel" ascii //weight: 1
        $x_1_24 = "exportKernelTaskPortSwitch" ascii //weight: 1
        $x_1_25 = "installCydiaLabel" ascii //weight: 1
        $x_1_26 = "installCydiaSwitch" ascii //weight: 1
        $x_1_27 = "installCydiaSwitchValueChanged:" ascii //weight: 1
        $x_1_28 = "iterate_evaluated_exploits" ascii //weight: 1
        $x_1_29 = "iterate_exploits" ascii //weight: 1
        $x_1_30 = "kalloc_spray_port" ascii //weight: 1
        $x_1_31 = "kernelExploitLabel" ascii //weight: 1
        $x_1_32 = "kernelExploitPickerView" ascii //weight: 1
        $x_1_33 = "kernelExploitTextField" ascii //weight: 1
        $x_1_34 = "ool_ports_spray_size_with_gc" ascii //weight: 1
        $x_1_35 = "openCydiaButton" ascii //weight: 1
        $x_1_36 = "resetCydiaCacheLabel" ascii //weight: 1
        $x_1_37 = "resetCydiaCacheSwitch" ascii //weight: 1
        $x_1_38 = "setKernelExploitPickerView:" ascii //weight: 1
        $x_1_39 = "sprayed %zu bytes to %zu ports in kalloc.%u" ascii //weight: 1
        $x_1_40 = "tappedOnOpenCydia:" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        ((uint32(0) == 0xfeedfacf) or (uint32(0) == 0xcffaedfe) or (uint32(0) == 0xfeedface) or (uint32(0) == 0xcefaedfe)) and
        (
            ((15 of ($x_1_*))) or
            ((1 of ($x_15_*))) or
            (all of ($x*))
        )
}

rule Exploit_iPhoneOS_Dakkatoni_B_2147751522_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:iPhoneOS/Dakkatoni.B!MTB"
        threat_id = "2147751522"
        type = "Exploit"
        platform = "iPhoneOS: "
        family = "Dakkatoni"
        severity = "Critical"
        info = "MTB: Microsoft Threat Behavior"
        signature_type = "SIGNATURE_TYPE_MACHOHSTR_EXT"
        threshold = "4"
        strings_accuracy = "High"
    strings:
        $x_1_1 = "com.apps.aspp" ascii //weight: 1
        $x_1_2 = "/.installed_yaluX" ascii //weight: 1
        $x_1_3 = "bin/launchctl load /Library/LaunchDaemons/0.reload.plist" ascii //weight: 1
        $x_1_4 = "exploit" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        ((uint32(0) == 0xfeedfacf) or (uint32(0) == 0xcffaedfe) or (uint32(0) == 0xfeedface) or (uint32(0) == 0xcefaedfe)) and
        (all of ($x*))
}

rule Exploit_iPhoneOS_Dakkatoni_D_2147760899_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:iPhoneOS/Dakkatoni.D!MTB"
        threat_id = "2147760899"
        type = "Exploit"
        platform = "iPhoneOS: "
        family = "Dakkatoni"
        severity = "Critical"
        info = "MTB: Microsoft Threat Behavior"
        signature_type = "SIGNATURE_TYPE_MACHOHSTR_EXT"
        threshold = "2"
        strings_accuracy = "High"
    strings:
        $x_1_1 = "/var/mobile/OsirisJailbreak" ascii //weight: 1
        $x_1_2 = "exploit started" ascii //weight: 1
        $x_1_3 = "com.geosn0w.noncesetter" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        ((uint32(0) == 0xfeedfacf) or (uint32(0) == 0xcffaedfe) or (uint32(0) == 0xfeedface) or (uint32(0) == 0xcefaedfe)) and
        (2 of ($x*))
}

