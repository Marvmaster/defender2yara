rule Exploit_iPhoneOS_CVE_2018_4243_B_2147788051_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:iPhoneOS/CVE-2018-4243.B!MTB"
        threat_id = "2147788051"
        type = "Exploit"
        platform = "iPhoneOS: "
        family = "CVE-2018-4243"
        severity = "Critical"
        info = "MTB: Microsoft Threat Behavior"
        signature_type = "SIGNATURE_TYPE_MACHOHSTR_EXT"
        threshold = "5"
        strings_accuracy = "High"
    strings:
        $x_1_1 = "replacer fd index %d is at the pipe_target_kaddr" ascii //weight: 1
        $x_1_2 = "Created fake_client at %016llx" ascii //weight: 1
        $x_1_3 = "/var/log/jailbreakd-stdout.log" ascii //weight: 1
        $x_1_4 = "keep hold of a send right to it; don't expect this exploit to work again without a reboot" ascii //weight: 1
        $x_1_5 = "hopefully prepared a fake tfp0!" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        ((uint32(0) == 0xfeedfacf) or (uint32(0) == 0xcffaedfe) or (uint32(0) == 0xfeedface) or (uint32(0) == 0xcefaedfe)) and
        (all of ($x*))
}

rule Exploit_iPhoneOS_CVE_2018_4243_A_2147794876_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:iPhoneOS/CVE-2018-4243.A!MTB"
        threat_id = "2147794876"
        type = "Exploit"
        platform = "iPhoneOS: "
        family = "CVE-2018-4243"
        severity = "Critical"
        info = "MTB: Microsoft Threat Behavior"
        signature_type = "SIGNATURE_TYPE_MACHOHSTR_EXT"
        threshold = "5"
        strings_accuracy = "High"
    strings:
        $x_1_1 = "autoExploit" ascii //weight: 1
        $x_1_2 = "1gamerdev.github.io/Torngat-Files/update.html?exploit=empty_list&version=%@" ascii //weight: 1
        $x_1_3 = "_exploitAutomaticallyCell" ascii //weight: 1
        $x_1_4 = "don't expect this exploit to work again without a reboot" ascii //weight: 1
        $x_1_5 = "/private/var/mobile/Torngat_TMP_Mask_Files.zip" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        ((uint32(0) == 0xfeedfacf) or (uint32(0) == 0xcffaedfe) or (uint32(0) == 0xfeedface) or (uint32(0) == 0xcefaedfe)) and
        (all of ($x*))
}

rule Exploit_iPhoneOS_CVE_2018_4243_C_2147795816_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:iPhoneOS/CVE-2018-4243.C!MTB"
        threat_id = "2147795816"
        type = "Exploit"
        platform = "iPhoneOS: "
        family = "CVE-2018-4243"
        severity = "Critical"
        info = "MTB: Microsoft Threat Behavior"
        signature_type = "SIGNATURE_TYPE_MACHOHSTR_EXT"
        threshold = "5"
        strings_accuracy = "High"
    strings:
        $x_1_1 = "Initializing kernel exploit" ascii //weight: 1
        $x_1_2 = "Successfully escaped Sandbox." ascii //weight: 1
        $x_1_3 = "/var/mobile/test.txt" ascii //weight: 1
        $x_1_4 = "tweetbot:///user_profile/%@" ascii //weight: 1
        $x_1_5 = "Erasing user data" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        ((uint32(0) == 0xfeedfacf) or (uint32(0) == 0xcffaedfe) or (uint32(0) == 0xfeedface) or (uint32(0) == 0xcefaedfe)) and
        (all of ($x*))
}

rule Exploit_iPhoneOS_CVE_2018_4243_A_2147808827_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:iPhoneOS/CVE-2018-4243.A!xp"
        threat_id = "2147808827"
        type = "Exploit"
        platform = "iPhoneOS: "
        family = "CVE-2018-4243"
        severity = "Critical"
        info = "xp: an internal category used to refer to some threats"
        signature_type = "SIGNATURE_TYPE_MACHOHSTR_EXT"
        threshold = "5"
        strings_accuracy = "High"
    strings:
        $x_1_1 = "iosbinpack64/usr/bin/inject" ascii //weight: 1
        $x_1_2 = "rootlessJB4/rootlessjb/rootlessJB4/Exploits/SockPort3/iosurface.c" ascii //weight: 1
        $x_1_3 = "tfp0: 0x%x" ascii //weight: 1
        $x_1_4 = "Bundle/.installed_rootlessJB3" ascii //weight: 1
        $x_1_5 = "bins/TweakInject.dylib" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        ((uint32(0) == 0xfeedfacf) or (uint32(0) == 0xcffaedfe) or (uint32(0) == 0xfeedface) or (uint32(0) == 0xcefaedfe)) and
        (all of ($x*))
}

