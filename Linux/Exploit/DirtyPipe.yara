rule Exploit_Linux_DirtyPipe_A_2147818285_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:Linux/DirtyPipe.A"
        threat_id = "2147818285"
        type = "Exploit"
        platform = "Linux: Linux platform"
        family = "DirtyPipe"
        severity = "Critical"
        signature_type = "SIGNATURE_TYPE_ELFHSTR_EXT"
        threshold = "5"
        strings_accuracy = "High"
    strings:
        $x_5_1 = "[+] popping root shell.." ascii //weight: 5
        $x_5_2 = "[+] hijacking suid binary.." ascii //weight: 5
        $x_5_3 = "[+] dropping suid shell.." ascii //weight: 5
    condition:
        (filesize < 20MB) and
        (uint32(0) == 0x464c457f) and
        (1 of ($x*))
}

rule Exploit_Linux_DirtyPipe_B_2147818286_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:Linux/DirtyPipe.B"
        threat_id = "2147818286"
        type = "Exploit"
        platform = "Linux: Linux platform"
        family = "DirtyPipe"
        severity = "Critical"
        signature_type = "SIGNATURE_TYPE_ELFHSTR_EXT"
        threshold = "20"
        strings_accuracy = "High"
    strings:
        $x_5_1 = "Usage: %s TARGETFILE OFFSET DATA" ascii //weight: 5
        $x_5_2 = "Sorry, cannot start writing at a page boundary" ascii //weight: 5
        $x_5_3 = "Sorry, cannot write across a page boundary" ascii //weight: 5
        $x_5_4 = "It worked!" ascii //weight: 5
        $x_5_5 = "splice failed" ascii //weight: 5
    condition:
        (filesize < 20MB) and
        (uint32(0) == 0x464c457f) and
        (4 of ($x*))
}

