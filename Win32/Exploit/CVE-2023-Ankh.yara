rule Exploit_Win32_CVE_2023_Ankh_DA_2147926788_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:Win32/CVE-2023-Ankh.DA!MTB"
        threat_id = "2147926788"
        type = "Exploit"
        platform = "Win32: Windows 32-bit platform"
        family = "CVE-2023-Ankh"
        severity = "Critical"
        info = "MTB: Microsoft Threat Behavior"
        signature_type = "SIGNATURE_TYPE_PEHSTR_EXT"
        threshold = "28"
        strings_accuracy = "Low"
    strings:
        $x_10_1 = {5c 00 78 00 36 00 34 00 5c 00 52 00 65 00 6c 00 65 00 61 00 73 00 65 00 5c 00 [0-50] 43 00 56 00 45 00 2d 00 32 00 30 00 32 00 33 00 2d 00 [0-15] 2e 00 70 00 64 00 62 00}  //weight: 10, accuracy: Low
        $x_10_2 = {5c 78 36 34 5c 52 65 6c 65 61 73 65 5c [0-50] 43 56 45 2d 32 30 32 33 2d [0-15] 2e 70 64 62}  //weight: 10, accuracy: Low
        $x_10_3 = ".exe <pid>" ascii //weight: 10
        $x_1_4 = "Attempting to elevate pid %i" ascii //weight: 1
        $x_1_5 = "IoRing Obj Address" ascii //weight: 1
        $x_1_6 = "RegBuffers overwritten with address" ascii //weight: 1
        $x_1_7 = "RegBuffersCount overwritten with" ascii //weight: 1
        $x_1_8 = "Target process token elevated to SYSTEM!" ascii //weight: 1
        $x_1_9 = "System EPROC address:" ascii //weight: 1
        $x_1_10 = "Target process EPROC address:" ascii //weight: 1
        $x_1_11 = "System token is at:" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        (uint16(0) == 0x5a4d) and
        (
            ((2 of ($x_10_*) and 8 of ($x_1_*))) or
            ((3 of ($x_10_*))) or
            (all of ($x*))
        )
}

