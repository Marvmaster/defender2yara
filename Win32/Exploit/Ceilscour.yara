rule Exploit_Win32_Ceilscour_A_2147816592_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:Win32/Ceilscour.A!dha"
        threat_id = "2147816592"
        type = "Exploit"
        platform = "Win32: Windows 32-bit platform"
        family = "Ceilscour"
        severity = "Critical"
        info = "dha: an internal category used to refer to some threats"
        signature_type = "SIGNATURE_TYPE_PEHSTR_EXT"
        threshold = "5"
        strings_accuracy = "High"
    strings:
        $x_1_1 = "error in osleak::leak_file_object_ptr" ascii //weight: 1
        $x_1_2 = "83 79 78 00 4c 8b c1 75 ?? 48 8B 51 60 8A 41 68 88 02" ascii //weight: 1
        $x_1_3 = "[%.4d.%.2d.%.2d %.2d:%.2d:%.2d:%.4d][%c] %s:" ascii //weight: 1
        $x_1_4 = "CClfsRiped::ClfsEncodeBlock" ascii //weight: 1
        $x_1_5 = "npfs::create_namedpipe" ascii //weight: 1
        $x_1_6 = "os_version - %x, os_subversion - %x, cache_line_size" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        (uint16(0) == 0x5a4d) and
        (5 of ($x*))
}

rule Exploit_Win32_Ceilscour_B_2147816593_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:Win32/Ceilscour.B!dha"
        threat_id = "2147816593"
        type = "Exploit"
        platform = "Win32: Windows 32-bit platform"
        family = "Ceilscour"
        severity = "Critical"
        info = "dha: an internal category used to refer to some threats"
        signature_type = "SIGNATURE_TYPE_PEHSTR_EXT"
        threshold = "5"
        strings_accuracy = "High"
    strings:
        $x_1_1 = "failed to get big pool info - %x" ascii //weight: 1
        $x_1_2 = "leak_bigpool" ascii //weight: 1
        $x_1_3 = "error: duplicate in big pool" ascii //weight: 1
        $x_1_4 = "failed to get modules info - %x" ascii //weight: 1
        $x_1_5 = "leak_kernel_modules" ascii //weight: 1
        $x_1_6 = "failed to get info for desired module - %s, list all:" ascii //weight: 1
        $x_1_7 = "Found code (%s) for pattern" ascii //weight: 1
        $x_1_8 = "pattern::search_pattern_in_section" ascii //weight: 1
        $x_1_9 = "failed to get system dir" ascii //weight: 1
        $x_2_10 = "blf::create_container" ascii //weight: 2
        $x_2_11 = "failed to create baselog record" ascii //weight: 2
        $x_1_12 = "patch_dst value - %p" ascii //weight: 1
        $x_1_13 = "patch_src value - %p" ascii //weight: 1
        $x_1_14 = "\\123\\x64\\Release\\exploit.pdb" ascii //weight: 1
    condition:
        (filesize < 20MB) and
        (uint16(0) == 0x5a4d) and
        (
            ((5 of ($x_1_*))) or
            ((1 of ($x_2_*) and 3 of ($x_1_*))) or
            ((2 of ($x_2_*) and 1 of ($x_1_*))) or
            (all of ($x*))
        )
}

rule Exploit_Win32_Ceilscour_C_2147816594_0
{
    meta:
        author = "defender2yara"
        detection_name = "Exploit:Win32/Ceilscour.C!dha"
        threat_id = "2147816594"
        type = "Exploit"
        platform = "Win32: Windows 32-bit platform"
        family = "Ceilscour"
        severity = "Critical"
        info = "dha: an internal category used to refer to some threats"
        signature_type = "SIGNATURE_TYPE_PEHSTR_EXT"
        threshold = "5"
        strings_accuracy = "Low"
    strings:
        $x_1_1 = "C:\\Windows\\System32\\hal.dll" ascii //weight: 1
        $x_2_2 = {41 6c 6c 6f 63 61 74 69 6f 6e 20 43 4c 46 53 5f 50 41 54 48 [0-1] 53 20 66 61 69 6c 65 64}  //weight: 2, accuracy: Low
        $x_1_3 = "Allocation failed" ascii //weight: 1
        $x_2_4 = "blf::create_control_record" ascii //weight: 2
        $x_1_5 = "Encode failed - %x" ascii //weight: 1
        $x_1_6 = "Create truncate record failed" ascii //weight: 1
        $x_1_7 = "ZwCreateFile failed: %x" ascii //weight: 1
        $x_1_8 = "SetFileInformationByHandle failed: %x" ascii //weight: 1
        $x_2_9 = {5c 44 65 6c 69 76 65 72 61 62 6c 65 5c [0-3] 5c [0-7] 5c 65 78 70 6c 6f 69 74 2e 70 64 62}  //weight: 2, accuracy: Low
    condition:
        (filesize < 20MB) and
        (uint16(0) == 0x5a4d) and
        (
            ((5 of ($x_1_*))) or
            ((1 of ($x_2_*) and 3 of ($x_1_*))) or
            ((2 of ($x_2_*) and 1 of ($x_1_*))) or
            ((3 of ($x_2_*))) or
            (all of ($x*))
        )
}

